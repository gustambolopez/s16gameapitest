const express=require("express"),sharp=require("sharp"),fetch=require("node-fetch").default,app=express(),port=5e3,base="https://img.gamedistribution.com/";app.get("/:img(*)",(async(e,s)=>{try{if(s.setHeader("Access-Control-Allow-Origin","*"),s.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS"),s.setHeader("Access-Control-Allow-Headers","Origin, X-Requested-With, Content-Type, Accept"),"OPTIONS"===e.method)return s.sendStatus(200);const t=e.params.img,r=`${base}${t}`,o=await fetch(r);if(!o.ok){await o.text().catch((()=>""));return s.status(o.status).send(`fetch err: ${o.status} ${o.statusText}`)}const a=await o.arrayBuffer(),n=Buffer.from(a);if(!n.length)return s.status(404).send("empty image");s.set("Content-Type",o.headers.get("content-type")||"application/octet-stream");const c=e.query.size;if(c){const[e,t]=c.split("x").map((e=>parseInt(e,10)));if(!e||!t||e<=0||t<=0)return s.status(400).send("bad size param");try{const r=await sharp(n).resize(e,t).toBuffer();return s.send(r)}catch(e){return console.error("Sharp resize error:",e),s.status(500).send("resize fail")}}s.send(n)}catch(e){console.error("Server error:",e),s.status(500).send("server error")}}));const srv=app.listen(5e3,(()=>{console.log("listening 5000")}));process.on("SIGINT",(()=>{srv.close((()=>{console.log("Server closing due to SIGINT"),process.exit(0)}))})),process.on("SIGTERM",(()=>{srv.close((()=>{console.log("Server closing due to SIGTERM"),process.exit(0)}))}));